debug = false

[audio]
# rate = 44100                    # [Hz] Sample rate used to initialize the speaker
# buffer = 5000                   # [-]  Number of samples the sound driver should buffer
# quality = 6                     # [-]  Resampling quality used if a sound file does not have the correct sample rate
# volume = 10                     # [%]  Initial volume used overall (common factor for music and sounds)

[sounds]
# path = "data/sounds/effects"
# ext = ".ogg"                    #      Extension for sound files
# randomizer = ".random"          #      Name of the magic file used to randomize sound groups
# volume = 100                    # [%]  Nominal volume level of sounds

[music]
# path = "data/music/playlists"
# ext = ".ogg"                    #      Extension for music files
# volume = 50                     # [%]  Nominal volume level of music
# startrng = [95, 5]              # [%]  Chance for each playlist to occur in the mix at the lowest intensity
# endrng = [30, 70]               # [%]  Chance for each playlist to occur in the mix at the highest intensity

[lights]
# path = "data/lights/effects"
# ext = ".tengo"                  #      Extension for light effect script files

[shell.linux]
shutdown = ["poweroff"]
reboot = ["reboot"]
bms-connect = ["bash", "-c", "command -v ble-scan && ble-serial -d $(ble-scan | grep BBYCR-BTTRY | cut -d' ' -f 1) & disown"]
bms-disconnect = ["bash", "-c", "pkill -SIGINT ble-serial & disown"]
bms-check = ["bash", "-c", "[ -x /opt/jbdtool/jbdtool ] && echo jbd || echo none"]
bms-read = ["bash", "-c", "/opt/jbdtool/jbdtool -t serial:$(readlink -f /tmp/ttyBLE) -j"]

[hooks]
app-started = ["sounds/Windows Boot/play", "shell/bms-connect"]
app-stopped = ["sounds/Windows Shutdown/play", "shell/bms-disconnect"]
music-paused = ["sounds/Record Scratch/play"]

[rest]
# port = 3000
# https_port = 3443

[hardware]
led-driver = "ws281x"             # [%]  Maximum brightness for the LEDs
# led-brightness = 100            # [%]  Maximum brightness for the LEDs
# led-pin = 18                    # [-]  GPIO pin to which the LEDs are connected

[gpio.turnkey]
chip = "gpiochip0"
debounce = 10000
type = "toggle"
pins = [4]
actions = ["music/pause",
           "music/play"]

[gpio.left-rotary]
chip = "gpiochip0"
debounce = 2500
type = "rotary"
pins = [7, 25, 8]
actions = ["system/volume/-5:system/volume/5",
           "music/next"]

[gpio.right-rotary]
chip = "gpiochip0"
debounce = 2500
type = "rotary"
pins = [9, 11, 10]
actions = ["system/intensity/-5:system/intensity/5",
           "sounds/Abfahrt/play"]

[gpio.left-toggles]
chip = "gpiochip2"
debounce = 10000
type = "toggles"
pins = [0, 1, 2, 3, 4, 5, 6, 7]
actions = ["sounds/Schnapps/play",
           "sounds/2000 Euro/play",
           "sounds/Airhorn/play",
           "sounds/Asozial/play",
           "sounds/Assi Toni/play",
           "lights/Strobe/start:lights/Strobe/stop",
           "sounds/Polizei/loop:sounds/Polizei/unloop",
           "lights/Police/start:lights/Police/stop"]

[gpio.right-toggles]
chip = "gpiochip3"
debounce = 10000
type = "toggles"
pins = [0, 1, 2, 3, 4, 5, 6, 7]
actions = ["sounds/Wolfgang pass auf!/play",
           "sounds/Halligalli/play",
           "sounds/Meme/play",
           "sounds/Hey, geh weg!/play",
           "sounds/I doubt it/play",
           "sounds/Ha, Gay!/play",
           "sounds/Pokemon Battle/loop:sounds/Pokemon Battle/unloop",
           "lights/Battle/start:lights/Battle/stop"]

[leds.front-trunk]
order = 1
count = 1

[leds.top-right]
order = 2
count = 8

[leds.rear-right]
order = 3
count = 5

[leds.rear-center]
order = 4
count = 5

[leds.rear-left]
order = 5
count = 5

[leds.top-left]
order = 6
count = 8

[leds.front-left]
order = 7
count = 5

[leds.front-center]
order = 8
count = 5

[leds.front-right]
order = 9
count = 5
